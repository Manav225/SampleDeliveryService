{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "locationName": {
            "type": "string",
            "defaultValue": "West US 2"
        },
        "location": {
            "type": "string",
            "defaultValue": "westus2"
        }
    },
    "variables": 
    {
        "maps_name": "[take(concat('sampledelivery',uniqueString(resourceGroup().id)),24)]",
        "keyvault_name": "[take(concat('sampledelivery',uniqueString(resourceGroup().id)),24)]",
        "cosmosdb_name": "[take(concat('sampledelivery',uniqueString(resourceGroup().id)),24)]",
        "appservice_name": "[take(concat('sampledelivery',uniqueString(resourceGroup().id)),24)]",
        "appserviceplan_name": "[take(concat('sampledelivery',uniqueString(resourceGroup().id)),24)]"
    },
    "resources": [
        {
            "type": "Microsoft.Maps/accounts",
            "apiVersion": "2018-05-01",
            "name": "[variables('maps_name')]",
            "location": "global",
            "sku": {
                "name": "s1"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
            "apiVersion": "2020-04-01",
            "name": "[concat(variables('cosmosdb_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "apiVersion": "2020-04-01",
            "name": "[variables('cosmosdb_name')]",
            "location": "[parameters('location')]",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": "",
                "CosmosAccountType": "Non-Production"
            },
            "kind": "GlobalDocumentDB",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "id": "[concat(variables('cosmosdb_name'), '-', parameters('location'))]",
                        "failoverPriority": 0,
                        "locationName": "[parameters('locationName')]"
                    }
                ],
                "backupPolicy": {
                    "type": "Continuous"
                },
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "ipRules": [],
                "dependsOn": [],
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ],
                "enableFreeTier": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('appservice_name')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('appserviceplan_name'))]"
            ],
            "tags": {},
            "properties": {
                "name": "[variables('appservice_name')]",
                "siteConfig": {
                    "appSettings": [],
                    "linuxFxVersion": "DOTNETCORE|5.0",
                    "alwaysOn": true
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appserviceplan_name'))]",
                "clientAffinityEnabled": false,                
                "hostingEnvironment": ""
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-11-01",
            "name": "[variables('appserviceplan_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "tags": {},
            "sku": {
                "Tier": "Basic",
                "Name": "B1"
            },
            "kind": "linux",
            "properties": {
                "name": "[variables('appserviceplan_name')]",
                "workerSize": "0",
                "workerSizeId": "0",
                "numberOfWorkers": "1",
                "reserved": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2018-02-14",
            "name": "[variables('keyvault_name')]",            
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('appservice_name'))]"
            ],
            "tags": {},            
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "enableRbacAuthorization": false,
                "accessPolicies": [
                    {
                    "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('appservice_name')), '2016-08-01', 'Full').identity.principalId]",
                    "tenantId": "[subscription().tenantId]",
                    "permissions": {
                        "keys": [
                            "Get"
                        ],
                        "secrets": [
                            "Get"
                        ],
                        "certificates": [                         
                        ]
                    },
                    "applicationId": ""
                }
                ],
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "networkAcls": {
                    "defaultAction": "allow",
                    "bypass": "AzureServices",
                    "ipRules": [],
                    "virtualNetworkRules": []
                }
            }
        }
    ]
}