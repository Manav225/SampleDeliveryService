@model IEnumerable<SampleDeliveryService.Models.Order>

@{
    ViewData["Title"] = "Sample Delivery Service";
}

<!-- ✅ Azure Maps SDK v3 -->
<script src="https://atlas.microsoft.com/sdk/javascript/mapcontrol/3/atlas.min.js"></script>
<link rel="stylesheet" href="https://atlas.microsoft.com/sdk/javascript/mapcontrol/3/atlas.min.css" type="text/css"/>

<p>Pending deliveries:</p>

<!-- ✅ Map Container -->
<div id="myMap" style="height: 500px; width: 100%; margin-bottom: 20px;"></div>

<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        window.onload = GetMap;

        function GetMap() {
            var resolveFunc = null;
            var rejectFunc = null;

            function tokenResolver() {
                if (this.readyState === 4 && this.status === 200) {
                    resolveFunc(this.responseText);
                } else if (this.status !== 200) {
                    rejectFunc(this.responseText);
                }
            }

            var map, animation;

            map = new atlas.Map('myMap', {
                center: [-122.33, 47.6],
                zoom: 9,
                view: 'Auto',
                language: 'en-US',
                authOptions: {
                    authType: "subscriptionKey",
                    subscriptionKey: "1A2WqGbNPrXkvJ7fANu170nqymSUlZupgApmCxJi4iqyLyA8yW07JQQJ99BDACYeBjFjiS1pAAAgAZMP21L5"
                }
            });


            map.events.add('ready', function () {
                var datasource = new atlas.source.DataSource();
                map.sources.add(datasource);

                map.layers.add(new atlas.layer.SymbolLayer(datasource, null, {
                    iconOptions: {
                        image: 'pin-round-darkblue',
                        anchor: 'center',
                        allowOverlap: true
                    }
                }));

                var points = [];
                @foreach (var order in Model)
                {
                    if (order != null)
                    {
                        string coordinates = order.Longitude + "," + order.Latitude;
                        <text>points.push(new atlas.data.Point([@coordinates]));</text>
                    }
                }

                // Custom animation logic (SDK v3 doesn't include animations like v2, so fallback gracefully or skip if needed)
                if (atlas.animations && atlas.animations.drop) {
                    animation = atlas.animations.drop(points, datasource, null, {
                        easing: 'easeOutBounce',
                        duration: 1000,
                        autoPlay: true
                    });
                } else {
                    // fallback: just add points without animation
                    points.forEach(point => {
                        datasource.add(new atlas.data.Feature(point));
                    });
                }
            });
        }
    });
</script>
