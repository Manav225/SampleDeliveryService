@model SampleDeliveryService.Models.Order

@{
    ViewData["Title"] = "Delete";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type='text/javascript'>
    function GetMap() {
        var resolveFunc = null;
        var rejectFunc = null;
        function tokenResolver() {
            if (this.readyState === 4 && this.status === 200) {
                resolveFunc(this.responseText);
            } else if (this.status !== 200) {
                rejectFunc(this.responseText);
            }
        }
        function getCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }
        var map, animation;
        //Initialize a map instance.
        map = new atlas.Map('myMap', {
            center: [@Model.Longitude , @Model.Latitude],
            zoom: 13,
            view: 'Auto',
            language: 'en-US',
            authOptions: {
                authType: "anonymous",
                clientId: getClientId(),
                getToken: function (resolve, reject, map) {
                    var xhttp = new XMLHttpRequest();
                    var url = "/api/token";
                    resolveFunc = resolve;
                    rejectFunc = reject;
                    xhttp.open("GET", url, true);
                    xhttp.setRequestHeader("Authorization", 'Bearer ' + getCookie("Authorization"));
                    xhttp.onreadystatechange = tokenResolver;
                    xhttp.send();
                }
            }
        });

        map.events.add('ready', function () {
            //Create a HTML marker and add it to the map.
            marker = new atlas.HtmlMarker({
                htmlContent: '<div class="pulseIcon"></div>',
                position: [@Model.Longitude , @Model.Latitude]
            });

            map.markers.add(marker);
        });

    }
</script>
<style type="text/css">
    .pulseIcon {
        display: block;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background: orange;
        border: 2px solid white;
        cursor: pointer;
        box-shadow: 0 0 0 rgba(0, 204, 255, 0.4);
        animation: pulse 3s infinite;
    }

        .pulseIcon:hover {
            animation: none;
        }

    @@keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(0, 204, 255, 0.4);
        }

        70% {
            box-shadow: 0 0 0 50px rgba(0, 204, 255, 0);
        }

        100% {
            box-shadow: 0 0 0 0 rgba(0, 204, 255, 0);
        }
    }
</style>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Order</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Packages)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Packages)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Street)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Street)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.State)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.State)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Completed)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Completed)
        </dd>
    </dl>
    <div id="myMap"></div>
    <form asp-action="Delete">
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-controller="Orders" asp-action="List">Back to List</a>
    </form>
</div>
